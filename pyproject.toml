[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "api_server"
authors = [
    { name = "Wolfgang Miller", email = "w-miller@t-online.de" },
]
description = "API server starter project"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13,<4.0"
classifiers = [
    'Intended Audience :: Developers',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.13',
    "License :: OSI Approved :: MIT License",
]
version = "0.1.0"
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.27.0",
    "typer>=0.9.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "strawberry-graphql[fastapi]>=0.262.0",
    "jinja2>=3.1.0",
    "sqlmodel>=0.0.14",
    "sqlalchemy>=2.0.27",
    "psycopg>=3.1.18",
    "psycopg-binary>=3.1.18",
    "alembic>=1.13.1",
    "tenacity>=9.0.0",
    "pydantic-settings>=2.2.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=4.3.0",
]
watch = [
    "watchfiles>=0.19.0",
]

[tool.setuptools]
packages = ["api_server"]

[tool.setuptools.package-dir]
"api_server" = "src/api_server"

[project.scripts]
api-server = "api_server.main:app"

[tool.ruff]
target-version = "py312"
extend-exclude = ["src/api_server/__version__.py"]
line-length = 150
lint.ignore = []
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "ARG001" # unused arguments in functions
]
# Format files
unsafe-fixes = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["api_server"]

[tool.flake8]
max-line-length = 150

[tool.pylint.FORMAT]
max-line-length = 150

[tool.pytest.ini_options]