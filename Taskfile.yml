version: '3'

vars:
  MODULE_NAME: api_server.main

tasks:
  setup:
    desc: Create a Python virtual environment
    cmds:
      - test -d .venv || uv venv

  install:
    desc: Install the package and development dependencies
    deps: [setup]
    cmds:
      - uv pip install --python .venv/bin/python -e '.[dev]'
      
  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf build/ dist/ *.egg-info .pytest_cache .ruff_cache __pycache__ .coverage
      - find . -type d -name "__pycache__" -exec rm -rf {} +
      - find . -type d -name "*.egg-info" -exec rm -rf {} +

  clean:all:
    desc: Clean all artifacts including virtual environment
    cmds:
      - task: clean
      - rm -rf .venv

  format:
    desc: Format code using ruff
    cmds:
      - .venv/bin/ruff format .

  lint:
    desc: Run ruff linter
    cmds:
      - .venv/bin/ruff check --fix .

  test:
    desc: Run tests with pytest
    cmds:
      - .venv/bin/python -m pytest {{.CLI_ARGS}}

  test:cov:
    desc: Run tests with coverage report
    cmds:
      - .venv/bin/python -m pytest --cov=src --cov-report=term-missing {{.CLI_ARGS}}

  check:
    desc: Run all code quality checks, excluding tests
    cmds:
      - task: format
      - task: lint

  build: 
    desc: Build the package
    cmds:
      - uv pip install --python .venv/bin/python build
      - .venv/bin/python -m build

  db:setup:
    desc: Setup the database and run all migrations
    cmds:
      - .venv/bin/alembic upgrade head

  db:migrate:
    desc: Generate a new migration
    cmds:
      - .venv/bin/alembic revision --autogenerate -m "{{.CLI_ARGS}}"

  db:upgrade:
    desc: Run all pending migrations
    cmds:
      - .venv/bin/alembic upgrade head

  db:downgrade:
    desc: Rollback the last migration
    cmds:
      - .venv/bin/alembic downgrade -1

  db:reset:
    desc: Reset the database (WARNING - This will delete all data)
    cmds:
      - task: db:setup

  run:
    desc: Run the application without auto-reload
    cmds:
      - .venv/bin/python -m {{.MODULE_NAME}} --no-reload {{.CLI_ARGS}}

  run:dev:
    desc: Run the application with auto-reload for development
    cmds:
      - .venv/bin/python -m {{.MODULE_NAME}} --reload {{.CLI_ARGS}}

  fct:
    desc: Format, check, test
    cmds:
      - task: format
      - task: check
      - task: test

  pre-commit:install:
    desc: Install pre-commit hooks
    deps: [setup]
    cmds:
      - .venv/bin/pre-commit install --install-hooks

  pre-commit:update:
    desc: Update pre-commit hooks
    deps: [setup]
    cmds:
      - .venv/bin/pre-commit autoupdate

  pre-commit:run:
    desc: Run pre-commit hooks on all files
    deps: [setup]
    cmds:
      - .venv/bin/pre-commit run --all-files
